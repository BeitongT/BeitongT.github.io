<!DOCTYPE html>
<!-- saved from url=(0077)https://courses.cit.cornell.edu/ece5990/ECE5725_Fall2017_projects/bt346-qq39/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <title>National Electrical Contest</title>
    

    <!-- Bootstrap core CSS -->
    <link href="./4CV_files/bootstrap.min.css" rel="stylesheet">
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <!-- <link href="../../assets/css/ie10-viewport-bug-workaround.css" rel="stylesheet"> -->
    <!-- Custom styles for this template -->
    <link href="./4CV_files/starter-template.css" rel="stylesheet">
    <!-- Just for debugging purposes. Don't actually copy these 2 lines! -->
    <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->
    <!-- <script src="../../assets/js/ie-emulation-modes-warning.js"></script> -->
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>

<body>
    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="4CV.htm">Squatting Tracking</a>
            </div>
            <div id="navbar" class="collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="4CV.htm">Home</a></li>
                    <li><a href="4CV.htm#intro">Introduction</a></li>
                    <li><a href="4CV.htm#obj">Project Objective</a></li>
                    <li><a href="4CV.htm#design">Design</a></li>
                    <li><a href="4CV.htm#testing">Testing</a></li>
                    <li><a href="4CV.htm#result">Result</a></li>
                </ul>
            </div>
            <!--/.nav-collapse -->
        </div>
    </nav>
    <div class="container">
        <div class="starter-template">
            <h1 class = "header1">Squatting Tracking</h1>
            <h2 style="color:red">More contents will be added soon~</h2>
            <br>
            <p class = "content">This project is our computer vision class final project.</p>
            <p class = "content">We made our own dataset and wrote the program to automatically detect the squatting angle. We did experiments on background subtraction, hough transform and tracking algorithms. Finally, we came up with a method to detect the angle successfully.<p>
        </div>
        <hr>
            <center><iframe width="840" height="473" src="https://www.youtube.com/embed/fT5lurtGHX0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe></center>
          <h4 style="text-align:center;">Demonstration Video(This video is our final contest project. We built a bidirectional DC-DC converter for lithium battery.)</h4>

          
        <!-- </div> -->
        <hr id="intro">
        <div style="text-align:center;">
            <h2>Introduction</h2>
            <p class="content">
                The design is by the boost module, constant current modules, digital modules and other components of high-efficiency two-way DC-DC circuit. Charging using high-efficiency buck chip TPS54340, added to the current loop, the current can be set, the current control accuracy of 0.13%, the current rate of change of 0.05%, the efficiency of 95.4%. Discharge TPS55340 form boost boost circuit, the output voltage is stable, the efficiency of 95.0%. The digital processing module of the system adopts STM32 one-chip computer with high processing speed and low power consumption to realize high-precision constant current charging and constant voltage discharge. It has the functions of overcharge protection, full charge, anti-reflux and battery residual judgment. System components, cost-effective, small size, light weight (250g), a better completion of the basic part and to play part of the requirements there is a certain degree of innovation. In addition, the design uses high-precision thermal transfer PCB board production, the basic all-chip process is conducive to the stable operation of high-frequency switching circuit.
            </p>
        </div>
        
        <hr id="design">
        <div style="text-align:center;">
            <h2>Design</h2>
            <br>
            <p class="content"> This the STM32F103 control board I designed for our team. </p>
            <br><br>

            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/schematic.png" alt="infinity image" style="width:60%;">
                <p><i>Figure 1: schematic of the control board</i></p>
            </div>

            <p class="content"> I used AltiumDesigner to design the board and make it to a PCB design. </p>
            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/04.jpeg" alt="infinity image" style="width:40%;">
                <p><i>Figure 2: PCB design</i></p>
            </div>
            <br>
            <p class="content"> I soldered this board and debugged all the modules on the board like the oled screen, keyboard, ADC and DAC etc. </p>
            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/board.jpg" alt="infinity image" style="width:40%;">
                <p><i>Figure 3: Finished Control Board</i></p>
            </div>

            <br>
            <h3>digital control dc power supply</h3>
            <br>
            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/PG1.jpg" alt="infinity image" style="width:40%;">
                <p><i>Figure 4: digital control dc power supply</i></p>
            </div>

            <br>
            <h3>switching power supply modules parallel power supply system</h3>
            <br>
            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/PG2.jpg" alt="infinity image" style="width:40%;">
                <p><i>Figure 5: switching power supply modules parallel power supply system</i></p>
            </div>

            <br>
            <h3>single phase AC-DC converter circuit and active power factor correction</h3>
            <br>
            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/PG3.jpg" alt="infinity image" style="width:40%;">
                <p><i>Figure 6: single phase AC-DC converter circuit and active power factor correction</i></p>
            </div>

            
            <br>
            <h3>bidirectional DC-DC converter for lithium battery</h3>
            <br>
            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/PG4.jpg" alt="infinity image" style="width:40%;">
                <p><i>Figure 7: bidirectional DC-DC converter for lithium battery</i></p>
            </div>

            <br>

            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/back.png" alt="infinity image" style="width:40%;">
                <p><i>Figure 8: back of bidirectional DC-DC converter for lithium battery</i></p>
            </div>

            <br>
            <h3>Team Member</h3>
            <br>
            <br>
            <div style="text-align:center;">
                <img class="img-rounded" src="./4CV_files/team.png" alt="infinity image" style="width:40%;">
                <p><i>Figure 9: Zhengning Zhao, Wenzhao Liu, Beitong Tian(From left to right)</i></p>
            </div></div> </div>


            
            




            

 
            

        
        <hr>
        <div class="row">
            <h2>Code Appendix</h2>
            <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#ino">main.c</button>
            <div id="ino" class="collapse">

<!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #557799">#include &quot;sys.h&quot;</span>
<span style="color: #557799">#include &quot;led.h&quot;</span>
<span style="color: #557799">#include &quot;delay.h&quot;</span>
<span style="color: #557799">#include &quot;key.h&quot;</span>
<span style="color: #557799">#include &quot;oled.h&quot;</span>
<span style="color: #557799">#include &quot;usart.h&quot;        </span>
<span style="color: #888888">//#include &quot;usmart.h&quot;</span>
<span style="color: #557799">#include &quot;timer.h&quot;</span>
<span style="color: #557799">#include &quot;beep.h&quot;</span>
<span style="color: #557799">#include &quot;dac.h&quot;</span>
<span style="color: #557799">#include &quot;adc.h&quot;</span>
<span style="color: #888888">//#include &quot;remote.h&quot;</span>
<span style="color: #888888">//#include &quot;spi.h&quot;</span>
<span style="color: #557799">#include &quot;math.h&quot;</span>

u8 count<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
u16 adci<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>, adcus<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>, adcu2<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,adcovp<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
<span style="color: #333399; font-weight: bold">float</span> tempi<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>, tempus<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>, tempu2<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,temp30<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,adcival<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,tempovp<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
 <span style="color: #333399; font-weight: bold">unsigned</span> <span style="color: #333399; font-weight: bold">int</span> temp<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,tempvar<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
<span style="color: #333399; font-weight: bold">unsigned</span> <span style="color: #333399; font-weight: bold">int</span> dacvals<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,dacvaltemp<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
<span style="color: #333399; font-weight: bold">float</span> dacvalss<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
<span style="color: #333399; font-weight: bold">unsigned</span> <span style="color: #333399; font-weight: bold">int</span> addend <span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
<span style="color: #333399; font-weight: bold">unsigned</span> <span style="color: #333399; font-weight: bold">char</span> backup[<span style="color: #0000DD; font-weight: bold">4</span>][<span style="color: #0000DD; font-weight: bold">4</span>] <span style="color: #333333">=</span> { <span style="color: #888888">//按键值备份，保存前一次的值</span>
    {<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>},
    {<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>},
    {<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>},
    {<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>}
    }<span style="color: #FF0000; background-color: #FFAAAA">；</span>
  <span style="color: #333399; font-weight: bold">unsigned</span> <span style="color: #333399; font-weight: bold">char</span> KeySta[<span style="color: #0000DD; font-weight: bold">4</span>][<span style="color: #0000DD; font-weight: bold">4</span>] <span style="color: #333333">=</span> { <span style="color: #888888">//全部矩阵按键的当前状态</span>
{<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>},
{<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>},
{<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>},
{<span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>, <span style="color: #0000DD; font-weight: bold">1</span>}
};
<span style="color: #008800; font-weight: bold">const</span> <span style="color: #333399; font-weight: bold">unsigned</span> <span style="color: #333399; font-weight: bold">char</span> KeyCodeMap[<span style="color: #0000DD; font-weight: bold">4</span>][<span style="color: #0000DD; font-weight: bold">4</span>] <span style="color: #333333">=</span> 
    { 
        
{ <span style="color: #0044DD">&#39;1&#39;</span>, <span style="color: #0044DD">&#39;2&#39;</span>, <span style="color: #0044DD">&#39;3&#39;</span>, <span style="color: #005588; font-weight: bold">0x26</span> }, <span style="color: #888888">//数字键 1、数字键 2、数字键 3、向上键</span>
{ <span style="color: #0044DD">&#39;4&#39;</span>, <span style="color: #0044DD">&#39;5&#39;</span>, <span style="color: #0044DD">&#39;6&#39;</span>, <span style="color: #005588; font-weight: bold">0x25</span> }, <span style="color: #888888">//数字键 4、数字键 5、数字键 6、向左键</span>
{ <span style="color: #0044DD">&#39;7&#39;</span>, <span style="color: #0044DD">&#39;8&#39;</span>, <span style="color: #0044DD">&#39;9&#39;</span>, <span style="color: #005588; font-weight: bold">0x28</span> }, <span style="color: #888888">//数字键 7、数字键 8、数字键 9、向下键</span>
{ <span style="color: #005588; font-weight: bold">0x1B</span>, <span style="color: #0044DD">&#39;0&#39;</span>, <span style="color: #005588; font-weight: bold">0x0D</span>, <span style="color: #005588; font-weight: bold">0x27</span> } <span style="color: #888888">//数字键 0、 ESC 键、 回车键、 向右键</span>
};
<span style="color: #557799">#define adcstand 3.3</span>

<span style="color: #333399; font-weight: bold">void</span> <span style="color: #0066BB; font-weight: bold">buckon</span>()
{
    ENboost<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
    delay_ms(<span style="color: #0000DD; font-weight: bold">100</span>);
    
    ENbuck<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">1</span>;
}
<span style="color: #333399; font-weight: bold">void</span> <span style="color: #0066BB; font-weight: bold">buckoff</span>()
{
    ENbuck<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
    delay_ms(<span style="color: #0000DD; font-weight: bold">100</span>);
        ENboost<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">1</span><span style="color: #FF0000; background-color: #FFAAAA">；</span>    
}
<span style="color: #333399; font-weight: bold">int</span> <span style="color: #0066BB; font-weight: bold">main</span>(<span style="color: #333399; font-weight: bold">void</span>)
{ 
  u8 stand<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,stand1<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,chuangxin<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,standcc<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,standcccv<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
    <span style="color: #333399; font-weight: bold">unsigned</span> <span style="color: #333399; font-weight: bold">int</span> p<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,count<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>,count2<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
    NVIC_Configuration();
  delay_init();
    uart_init(<span style="color: #0000DD; font-weight: bold">9600</span>);
    LED_Init();
    BEEP_Init();    
    KEY_Init();  
  OLED_Init();
    TIM3_Int_Init(<span style="color: #0000DD; font-weight: bold">30</span><span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">1</span>,<span style="color: #0000DD; font-weight: bold">2400</span><span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">1</span>);     
  Dac1_Init();
  Adc_Init();
    Dac1_Set_Vol(<span style="color: #0000DD; font-weight: bold">20</span>);
    OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">16</span>,<span style="background-color: #fff0f0">&quot;  CC / CC CV &quot;</span>);
    OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">32</span>,<span style="background-color: #fff0f0">&quot;  1  /   2   &quot;</span>);
    OLED_Refresh_Gram();
    <span style="color: #008800; font-weight: bold">while</span>((standcc<span style="color: #333333">|</span>standcccv)<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">0</span>)
    {
        <span style="color: #008800; font-weight: bold">if</span>(addend<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">1</span>) {standcc<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">1</span>;addend<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;}
        <span style="color: #008800; font-weight: bold">else</span> <span style="color: #008800; font-weight: bold">if</span>(addend<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">2</span>) {
        standcccv<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">1</span>; addend<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;}
    }

    OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">0</span>,<span style="background-color: #fff0f0">&quot;SET:         &quot;</span>);
    OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">16</span>,<span style="background-color: #fff0f0">&quot;I :         &quot;</span>);    
    OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">32</span>,<span style="background-color: #fff0f0">&quot;Us:         &quot;</span>);    
    OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">48</span>,<span style="background-color: #fff0f0">&quot;U2:         &quot;</span>);
    OLED_Refresh_Gram();
    
    <span style="color: #008800; font-weight: bold">while</span>(<span style="color: #0000DD; font-weight: bold">1</span>)
  {    adci<span style="color: #333333">=</span>Get_Adc_Average(<span style="color: #0000DD; font-weight: bold">1</span>,<span style="color: #0000DD; font-weight: bold">100</span>);
        tempi<span style="color: #333333">=</span>(adci<span style="color: #333333">*</span>adcstand<span style="color: #333333">/</span><span style="color: #0000DD; font-weight: bold">4096</span><span style="color: #333333">/</span><span style="color: #6600EE; font-weight: bold">1.0625</span><span style="color: #333333">-</span><span style="color: #6600EE; font-weight: bold">0.0078</span>)<span style="color: #333333">/</span><span style="color: #6600EE; font-weight: bold">1.0029</span><span style="color: #333333">*</span><span style="color: #6600EE; font-weight: bold">1.0075</span><span style="color: #333333">-</span><span style="color: #6600EE; font-weight: bold">0.003</span>;
        
        adcus<span style="color: #333333">=</span>Get_Adc_Average(<span style="color: #0000DD; font-weight: bold">2</span>,<span style="color: #0000DD; font-weight: bold">30</span>);
        tempus<span style="color: #333333">=</span>(<span style="color: #333399; font-weight: bold">float</span>)(adcus<span style="color: #333333">*</span>adcstand<span style="color: #333333">/</span><span style="color: #0000DD; font-weight: bold">4096</span><span style="color: #333333">*</span><span style="color: #0000DD; font-weight: bold">14</span><span style="color: #333333">-</span><span style="color: #6600EE; font-weight: bold">0.0791</span>)<span style="color: #333333">/</span><span style="color: #6600EE; font-weight: bold">0.9762</span><span style="color: #333333">*</span><span style="color: #6600EE; font-weight: bold">0.9954</span><span style="color: #333333">+</span><span style="color: #6600EE; font-weight: bold">0.1209</span>;
        adcu2<span style="color: #333333">=</span>Get_Adc_Average(<span style="color: #0000DD; font-weight: bold">3</span>,<span style="color: #0000DD; font-weight: bold">30</span>);
        tempu2<span style="color: #333333">=</span>(<span style="color: #333399; font-weight: bold">float</span>)(adcu2<span style="color: #333333">*</span>adcstand<span style="color: #333333">/</span><span style="color: #0000DD; font-weight: bold">4096</span><span style="color: #333333">*</span><span style="color: #0000DD; font-weight: bold">14</span><span style="color: #333333">-</span><span style="color: #6600EE; font-weight: bold">0.1059</span>)<span style="color: #333333">/</span><span style="color: #6600EE; font-weight: bold">0.98</span><span style="color: #333333">*</span><span style="color: #6600EE; font-weight: bold">0.995</span><span style="color: #333333">+</span><span style="color: #6600EE; font-weight: bold">0.1462</span>;
        adcovp<span style="color: #333333">=</span>Get_Adc_Average(<span style="color: #0000DD; font-weight: bold">5</span>,<span style="color: #0000DD; font-weight: bold">250</span>);
        tempovp<span style="color: #333333">=</span>(<span style="color: #333399; font-weight: bold">float</span>)((adcovp<span style="color: #333333">*</span>adcstand<span style="color: #333333">/</span><span style="color: #0000DD; font-weight: bold">4096</span><span style="color: #333333">*</span><span style="color: #6600EE; font-weight: bold">10.1</span>)<span style="color: #333333">+</span><span style="color: #6600EE; font-weight: bold">1.5</span>);
       dacvalss<span style="color: #333333">=</span><span style="color: #6600EE; font-weight: bold">0.2</span>;
        <span style="color: #008800; font-weight: bold">if</span>(stand<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">0</span>)
        {
        oled_show(tempi,<span style="color: #0000DD; font-weight: bold">32</span>,<span style="color: #0000DD; font-weight: bold">16</span>);
       oled_show(tempus,<span style="color: #0000DD; font-weight: bold">32</span>,<span style="color: #0000DD; font-weight: bold">32</span>);
        oled_show(tempovp,<span style="color: #0000DD; font-weight: bold">32</span>,<span style="color: #0000DD; font-weight: bold">48</span>);
        OLED_Refresh_Gram();
        }
        <span style="color: #008800; font-weight: bold">if</span>(tempu2<span style="color: #333333">&lt;</span><span style="color: #6600EE; font-weight: bold">1.0</span><span style="color: #333333">&amp;&amp;</span>stand<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">0</span>)
        {
            buckon();
            
            <span style="color: #008800; font-weight: bold">if</span>(standcccv<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">1</span>)
            {
                <span style="color: #008800; font-weight: bold">if</span>(tempovp<span style="color: #333333">&gt;</span><span style="color: #0000DD; font-weight: bold">21</span>)
                    
                {
                    dacvaltemp<span style="color: #333333">-=</span><span style="color: #0000DD; font-weight: bold">10</span>;
        {Dac1_Set_Vol(dacvaltemp);}
                <span style="color: #008800; font-weight: bold">if</span>(tempi<span style="color: #333333">&lt;</span>dacvalss)  
                    {   
                        OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">0</span>,<span style="background-color: #fff0f0">&quot;             &quot;</span>);
                        OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">16</span>,<span style="background-color: #fff0f0">&quot;  FULLCHARGE &quot;</span>);   
                        OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">32</span>,<span style="background-color: #fff0f0">&quot;             &quot;</span>);   
                        OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">48</span>,<span style="background-color: #fff0f0">&quot;             &quot;</span>);
                ENbuck<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;stand<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">1</span>;
                }}
                <span style="color: #008800; font-weight: bold">if</span>(tempovp<span style="color: #333333">&lt;</span><span style="color: #0000DD; font-weight: bold">21</span>)
                {dacvaltemp<span style="color: #333333">+=</span><span style="color: #0000DD; font-weight: bold">10</span>;
                    Dac1_Set_Vol(dacvaltemp);}
            }
            <span style="color: #008800; font-weight: bold">if</span>(tempovp<span style="color: #333333">&gt;</span><span style="color: #0000DD; font-weight: bold">24</span>) 
            { 
                stand<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">1</span>;
                ENbuck<span style="color: #333333">=</span><span style="color: #0000DD; font-weight: bold">0</span>;
          OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">0</span>,<span style="background-color: #fff0f0">&quot;                &quot;</span>);
          OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">16</span>,<span style="background-color: #fff0f0">&quot;   OVERVOLTAGE &quot;</span>);   
          OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">32</span>,<span style="background-color: #fff0f0">&quot;               &quot;</span>);   
                OLED_ShowString(<span style="color: #0000DD; font-weight: bold">0</span>,<span style="color: #0000DD; font-weight: bold">48</span>,<span style="background-color: #fff0f0">&quot;               &quot;</span>);
                OLED_Refresh_Gram();
            }
                
            <span style="color: #008800; font-weight: bold">if</span>(standcccv<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">0</span>)
            {<span style="color: #008800; font-weight: bold">if</span>(dacvals<span style="color: #333333">&gt;</span><span style="color: #0000DD; font-weight: bold">15</span>)
   {
     <span style="color: #008800; font-weight: bold">if</span>(tempi<span style="color: #333333">*</span><span style="color: #0000DD; font-weight: bold">1000</span><span style="color: #333333">&gt;</span>(<span style="color: #333399; font-weight: bold">float</span>)(dacvals)<span style="color: #333333">+</span><span style="color: #0000DD; font-weight: bold">1</span>) Dac1_Set_Vol(dacvaltemp<span style="color: #333333">--</span>);
   <span style="color: #008800; font-weight: bold">else</span> <span style="color: #008800; font-weight: bold">if</span>  (tempi<span style="color: #333333">*</span><span style="color: #0000DD; font-weight: bold">1000</span><span style="color: #333333">&lt;</span>(<span style="color: #333399; font-weight: bold">float</span>)(dacvals)<span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">1</span>)  Dac1_Set_Vol(dacvaltemp<span style="color: #333333">++</span>);
     }} 
    }
             <span style="color: #008800; font-weight: bold">else</span> <span style="color: #008800; font-weight: bold">if</span>(fabs(tempu2<span style="color: #333333">-</span>tempus)<span style="color: #333333">&lt;</span><span style="color: #6600EE; font-weight: bold">0.5</span><span style="color: #333333">&amp;&amp;</span>stand<span style="color: #333333">==</span><span style="color: #0000DD; font-weight: bold">0</span>)
        {
            buckoff();
        }
                <span style="color: #008800; font-weight: bold">else</span> <span style="color: #008800; font-weight: bold">if</span>(tempus<span style="color: #333333">&gt;</span><span style="color: #6600EE; font-weight: bold">35.0</span>)
        { 
            
      buckon();
            temp<span style="color: #333333">=</span>((tempus<span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">30</span>)<span style="color: #333333">*</span><span style="color: #0000DD; font-weight: bold">200</span>)<span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">1000</span><span style="color: #333333">+</span><span style="color: #0000DD; font-weight: bold">10</span>;
            tempvar<span style="color: #333333">=</span>temp<span style="color: #333333">*</span><span style="color: #6600EE; font-weight: bold">1.35</span>;
            Dac1_Set_Vol(tempvar);

        }
            <span style="color: #008800; font-weight: bold">else</span> {buckoff(); Dac1_Set_Vol(<span style="color: #0000DD; font-weight: bold">20</span>);}
 (Get_Adc_Average(<span style="color: #0000DD; font-weight: bold">1</span>,<span style="color: #0000DD; font-weight: bold">200</span>)<span style="color: #333333">*</span>adcstand<span style="color: #333333">/</span><span style="color: #0000DD; font-weight: bold">4096</span><span style="color: #333333">/</span><span style="color: #6600EE; font-weight: bold">1.0626</span><span style="color: #333333">*</span><span style="color: #0000DD; font-weight: bold">1000</span><span style="color: #333333">&lt;</span>(<span style="color: #333399; font-weight: bold">float</span>)(dacvals)<span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">2</span>)  Dac1_Set_Vol(<span style="color: #333333">+</span>
<span style="color: #333333">+</span>dacvaltemp);}
}   
    }
</pre></div>






</div></div>
    <!-- /.container -->
    <br>
    <br>
    <br>
    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="./4CV_files/jquery.min.js"></script>
    <script>
    window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')
    </script>
    <script src="./4CV_files/bootstrap.min.js"></script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <!-- <script src="../../assets/js/ie10-viewport-bug-workaround.js"></script> -->


</body></html>


